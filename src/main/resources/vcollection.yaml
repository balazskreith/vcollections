something_else:
  type: [memory / redis / cluster / replica]
  credential: credential_name
  crypter: crypter_name
---
something_else:
  type: [memory / redis / cluster / replica]
  credential: credential_name
  crypter: crypter_name
---
storages:
  - key: customers
    builder: cachedStorage
    configuration:
      keyType: java.lang.String
      keyGenerator:
        class: java.lang.String # The registered keyGenerator
        selfTest: True # False by default
      subset:
        builder: memoryStorage
      superset:
        builder: memoryStorage
  - key: sessions
    builder: memoryStorage
    configuration:
      retentionInMs: 10000
      capacity: 10000


---
something_else:
  type: [memory / redis / cluster / replica]
  credential: credential_name
  crypter: crypter_name
---
crypters: # Crypting can be achieved by serialization, the key to generate is out of the scope of this feature.
#  - crypter_name:
#      type: AES
#      credential: credential_name

